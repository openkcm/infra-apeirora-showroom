apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openbao
spec:
  dependsOn:
    - name: openbao--pre-release
  chart:
    spec:
      chart: openbao
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: openbao
      version: 0.19.1
  install:
    createNamespace: false
    remediation:
      retries: -1
      remediateLastFailure: true
  upgrade:
    remediation:
      retries: -1
      remediateLastFailure: true
  interval: 1m0s
  releaseName: openbao
  values:
    global:
      enabled: true
      tlsDisable: false
    server:
      logLevel: debug
      standalone:
        enabled: true
        config: |
          listener "tcp" {
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/tls/tls.crt"
            tls_key_file  = "/tls/tls.key"
            tls_client_ca_file = "/client-ca/ca.crt"
            tls_require_and_verify_client_cert = true
          }
      volumes:
        - name: userconfig-openbao-storage-config
          secret:
            secretName: openbao-postgres-storage
            defaultMode: 420
        - name: unseal-keys
          secret:
            secretName: openbao-unseal-keys
        - name: tls
          secret:
            secretName: openbao-tls
        - name: client-ca                    # added: CA secret issued earlier
          secret:
            secretName: openbao-client-ca-secret
      volumeMounts:
        - name: userconfig-openbao-storage-config
          mountPath: /openbao/userconfig/openbao-storage-config
          readOnly: true
        - name: tls
          mountPath: /tls
          readOnly: true
        - name: client-ca                    # added mount
          mountPath: /client-ca
          readOnly: true
      extraArgs: "-config=/openbao/userconfig/openbao-storage-config/config.hcl"
      extraContainers:
        - name: unseal-sidecar
          image: curlimages/curl:8.5.0
          command: ["sh","-c"]
          args:
            - |
              set -e
              echo "Listing mounted unseal keys directory..."
              ls -al /unseal || true
              HOST="127.0.0.1:8200"
              echo "Waiting for OpenBao HTTPS port at $HOST (localhost, ignoring TLS verify) ..."
              until curl -sk https://$HOST/v1/sys/health >/dev/null 2>&1; do
                sleep 2
              done
              if curl -sk https://$HOST/v1/sys/seal-status | grep '"sealed":false' >/dev/null; then
                echo "Already unsealed."
                sleep 3600
              fi
              FOUND=0
              for f in /unseal/*; do
                [ -f "$f" ] || continue
                FOUND=1
                KEY=$(cat "$f")
                echo "Submitting unseal key file $f over HTTPS to $HOST (insecure -k)"
                curl -sk -X POST -H "Content-Type: application/json" -d "{\"key\":\"$KEY\"}" https://$HOST/v1/sys/unseal >/dev/null
                if curl -sk https://$HOST/v1/sys/seal-status | grep '"sealed":false' >/dev/null; then
                  echo "Unsealed."
                  break
                fi
              done
              if [ $FOUND -eq 0 ]; then
                echo "No unseal key files found in /unseal (check Secret openbao-unseal-keys)."
              fi
              sleep 3600
          volumeMounts:
            - name: unseal-keys
              mountPath: /unseal
              readOnly: true
            - name: tls
              mountPath: /tls
              readOnly: true
      extraEnvironmentVars:
        OPENBAO_CACERT: /tls/tls.ca
        BAO_CLUSTER_ADDR: https://openbao.openbao.svc:8201
        BAO_API_ADDR: https://openbao.openbao.svc:8200


    injector:
      replicas: 2
      leaderElector:
        enabled: false
      certs:
        secretName: injector-tls
      webhook:
        annotations:
          cert-manager.io/inject-ca-from: openbao/injector-certificate"
